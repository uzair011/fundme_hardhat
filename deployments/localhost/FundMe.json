{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheeperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0e95a294d3d2f9312e0c84a30f5c0e73695a90ebbd318465e5b4f634e1eacb57",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1033059",
    "logsBloom": "0x
    "blockHash": "0xd9424c0381c0ceafe6b9da7c8f217c4f66857e9fd38c8783312b856114b3c66e",
    "transactionHash": "0x0e95a294d3d2f9312e0c84a30f5c0e73695a90ebbd318465e5b4f634e1eacb57",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1033059",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "27fe9512226ede185f4e6a6240d72d1d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheeperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// import \\\"./hardhat.console.sol\\\"\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    // function getVersion() public view returns (uint256){\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\\n    //     return priceFeed.version();\\n    // }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheeperWithdraw() public payable onlyOwner {\\n        // ? creating a memory[]... to store s_funders ====> reduce the gas\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x30e8fa38d990f0488bb39b95c9f6339d2d700983649d0d694a4a5dbe3411b153\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // Rinkeby ETH / USD Address\\n        // https://docs.chain.link/docs/ethereum-addresses/\\n        //   priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6d87dd257cdc5baf30851b2d1f730b7e48282e7e198677d7dfd45c78bfefc641\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012d1380380620012d18339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c6111526200017f6000396000818161037d015281816105cc015261061c01526111526000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063a360b9351461019d578063b60d4288146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aaa565b6102eb565b6040516100cc9190610ca0565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610ad7565b610333565b6040516101099190610c2a565b60405180910390f35b61011a61037b565b005b34801561012857600080fd5b506101316105bb565b60405161013e9190610ca0565b60405180910390f35b34801561015357600080fd5b5061015c6105c8565b6040516101699190610c2a565b60405180910390f35b34801561017e57600080fd5b506101876105f0565b6040516101949190610c45565b60405180910390f35b6101a561061a565b005b6101af6101b1565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108be90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cd7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061034957610348611008565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ab5760006001828154811061042657610425611008565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a390610f61565b915050610403565b50600067ffffffffffffffff8111156104c7576104c6611037565b5b6040519080825280602002602001820160405280156104f55781602001602082028036833780820191505090505b506001908051906020019061050b92919061099a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053290610c15565b60006040518083038185875af1925050503d806000811461056f576040519150601f19603f3d011682016040523d82523d6000602084013e610574565b606091505b50509050806105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610c60565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ad57600082828151811061074b5761074a611008565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a590610f61565b91505061072d565b50600067ffffffffffffffff8111156107c9576107c8611037565b5b6040519080825280602002602001820160405280156107f75781602001602082028036833780820191505090505b506001908051906020019061080d92919061099a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161083490610c15565b60006040518083038185875af1925050503d8060008114610871576040519150601f19603f3d011682016040523d82523d6000602084013e610876565b606091505b50509050806108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190610c60565b60405180910390fd5b5050565b6000806108ca836108fa565b90506000670de0b6b3a764000085836108e39190610e75565b6108ed9190610d2d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190610b04565b5050509150506402540be400816109929190610d5e565b915050919050565b828054828255906000526020600020908101928215610a13579160200282015b82811115610a125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ba565b5b509050610a209190610a24565b5090565b5b80821115610a3d576000816000905550600101610a25565b5090565b600081359050610a50816110c0565b92915050565b600081519050610a65816110d7565b92915050565b600081359050610a7a816110ee565b92915050565b600081519050610a8f816110ee565b92915050565b600081519050610aa481611105565b92915050565b600060208284031215610ac057610abf611066565b5b6000610ace84828501610a41565b91505092915050565b600060208284031215610aed57610aec611066565b5b6000610afb84828501610a6b565b91505092915050565b600080600080600060a08688031215610b2057610b1f611066565b5b6000610b2e88828901610a95565b9550506020610b3f88828901610a56565b9450506040610b5088828901610a80565b9350506060610b6188828901610a80565b9250506080610b7288828901610a95565b9150509295509295909350565b610b8881610ecf565b82525050565b610b9781610f2b565b82525050565b6000610baa600b83610cc6565b9150610bb58261106b565b602082019050919050565b6000610bcd601b83610cc6565b9150610bd882611094565b602082019050919050565b6000610bf0600083610cbb565b9150610bfb826110bd565b600082019050919050565b610c0f81610f0b565b82525050565b6000610c2082610be3565b9150819050919050565b6000602082019050610c3f6000830184610b7f565b92915050565b6000602082019050610c5a6000830184610b8e565b92915050565b60006020820190508181036000830152610c7981610b9d565b9050919050565b60006020820190508181036000830152610c9981610bc0565b9050919050565b6000602082019050610cb56000830184610c06565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ce282610f0b565b9150610ced83610f0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2257610d21610faa565b5b828201905092915050565b6000610d3882610f0b565b9150610d4383610f0b565b925082610d5357610d52610fd9565b5b828204905092915050565b6000610d6982610ee1565b9150610d7483610ee1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610db357610db2610faa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610df057610def610faa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2d57610e2c610faa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6a57610e69610faa565b5b828202905092915050565b6000610e8082610f0b565b9150610e8b83610f0b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec457610ec3610faa565b5b828202905092915050565b6000610eda82610eeb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f3682610f3d565b9050919050565b6000610f4882610f4f565b9050919050565b6000610f5a82610eeb565b9050919050565b6000610f6c82610f0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9f57610f9e610faa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110c981610ecf565b81146110d457600080fd5b50565b6110e081610ee1565b81146110eb57600080fd5b50565b6110f781610f0b565b811461110257600080fd5b50565b61110e81610f15565b811461111957600080fd5b5056fea264697066735822122099aa2167abbcd2ca60b1ae03739843be4002a9e71cdcffea2ae357068f94a13364736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063a360b9351461019d578063b60d4288146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610aaa565b6102eb565b6040516100cc9190610ca0565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610ad7565b610333565b6040516101099190610c2a565b60405180910390f35b61011a61037b565b005b34801561012857600080fd5b506101316105bb565b60405161013e9190610ca0565b60405180910390f35b34801561015357600080fd5b5061015c6105c8565b6040516101699190610c2a565b60405180910390f35b34801561017e57600080fd5b506101876105f0565b6040516101949190610c45565b60405180910390f35b6101a561061a565b005b6101af6101b1565b005b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108be90919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c80565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610cd7565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006001828154811061034957610348611008565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610400576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104ab5760006001828154811061042657610425611008565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104a390610f61565b915050610403565b50600067ffffffffffffffff8111156104c7576104c6611037565b5b6040519080825280602002602001820160405280156104f55781602001602082028036833780820191505090505b506001908051906020019061050b92919061099a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161053290610c15565b60006040518083038185875af1925050503d806000811461056f576040519150601f19603f3d011682016040523d82523d6000602084013e610574565b606091505b50509050806105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610c60565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461069f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ad57600082828151811061074b5761074a611008565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a590610f61565b91505061072d565b50600067ffffffffffffffff8111156107c9576107c8611037565b5b6040519080825280602002602001820160405280156107f75781602001602082028036833780820191505090505b506001908051906020019061080d92919061099a565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161083490610c15565b60006040518083038185875af1925050503d8060008114610871576040519150601f19603f3d011682016040523d82523d6000602084013e610876565b606091505b50509050806108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190610c60565b60405180910390fd5b5050565b6000806108ca836108fa565b90506000670de0b6b3a764000085836108e39190610e75565b6108ed9190610d2d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190610b04565b5050509150506402540be400816109929190610d5e565b915050919050565b828054828255906000526020600020908101928215610a13579160200282015b82811115610a125782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109ba565b5b509050610a209190610a24565b5090565b5b80821115610a3d576000816000905550600101610a25565b5090565b600081359050610a50816110c0565b92915050565b600081519050610a65816110d7565b92915050565b600081359050610a7a816110ee565b92915050565b600081519050610a8f816110ee565b92915050565b600081519050610aa481611105565b92915050565b600060208284031215610ac057610abf611066565b5b6000610ace84828501610a41565b91505092915050565b600060208284031215610aed57610aec611066565b5b6000610afb84828501610a6b565b91505092915050565b600080600080600060a08688031215610b2057610b1f611066565b5b6000610b2e88828901610a95565b9550506020610b3f88828901610a56565b9450506040610b5088828901610a80565b9350506060610b6188828901610a80565b9250506080610b7288828901610a95565b9150509295509295909350565b610b8881610ecf565b82525050565b610b9781610f2b565b82525050565b6000610baa600b83610cc6565b9150610bb58261106b565b602082019050919050565b6000610bcd601b83610cc6565b9150610bd882611094565b602082019050919050565b6000610bf0600083610cbb565b9150610bfb826110bd565b600082019050919050565b610c0f81610f0b565b82525050565b6000610c2082610be3565b9150819050919050565b6000602082019050610c3f6000830184610b7f565b92915050565b6000602082019050610c5a6000830184610b8e565b92915050565b60006020820190508181036000830152610c7981610b9d565b9050919050565b60006020820190508181036000830152610c9981610bc0565b9050919050565b6000602082019050610cb56000830184610c06565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ce282610f0b565b9150610ced83610f0b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2257610d21610faa565b5b828201905092915050565b6000610d3882610f0b565b9150610d4383610f0b565b925082610d5357610d52610fd9565b5b828204905092915050565b6000610d6982610ee1565b9150610d7483610ee1565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610db357610db2610faa565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610df057610def610faa565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e2d57610e2c610faa565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e6a57610e69610faa565b5b828202905092915050565b6000610e8082610f0b565b9150610e8b83610f0b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ec457610ec3610faa565b5b828202905092915050565b6000610eda82610eeb565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f3682610f3d565b9050919050565b6000610f4882610f4f565b9050919050565b6000610f5a82610eeb565b9050919050565b6000610f6c82610f0b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f9f57610f9e610faa565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110c981610ecf565b81146110d457600080fd5b50565b6110e081610ee1565b81146110eb57600080fd5b50565b6110f781610f0b565b811461110257600080fd5b50565b61110e81610f15565b811461111957600080fd5b5056fea264697066735822122099aa2167abbcd2ca60b1ae03739843be4002a9e71cdcffea2ae357068f94a13364736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}